import java.sql.SQLException;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class TimeFrame extends javax.swing.JFrame {    
    DB_conn DBM = new DB_conn();
    String strSQL = "Select * From time";
    public static String ID;
    
    int price;
    int u_time; // 사용시간
    int r_time; // 남은시간


    public TimeFrame(String id) {
        initComponents();
        java.util.Timer timer = new java.util.Timer();
            TimerTask task = new TimerTask() {
                @Override
                public void run() {                  
                        txt_Price.setText(Integer.toString(price));
                        txt_Use.setText(Integer.toString(u_time));
                        txt_Count.setText(Integer.toString(r_time));
                        u_time++;
                        r_time--;
                        //if(r_time==-1) timer.cancel(); //이거 넣으면 시간이 안가요                  
                           if(r_time==0)                      {
                                txt_Use.setText(Integer.toString(u_time));
                        txt_Count.setText(Integer.toString(r_time));
                               timer.cancel();
                            
                           }
                }
            };
            timer.scheduleAtFixedRate(task, 0l, 1000);        
        
        try { 
            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strSQL);
            while(DBM.DB_rs.next()){
            // String strId = DBM.DB_rs.getString("ID"); //id 가져오기

            lbl_Id.setText("ID : " + ID);
            price = DBM.DB_rs.getInt("cost"); //기본 0원에 시간 추가 이벤트 발생시 사용요금 변경
            u_time = DBM.DB_rs.getInt("u_time"); //사용시간 가져오기
            r_time = DBM.DB_rs.getInt("r_time"); //남은시간 가져오기
            
            txt_Price.setText(Integer.toString(price));
            txt_Use.setText(Integer.toString(u_time));
            txt_Count.setText(Integer.toString(r_time));
            
                          
            }
            DBM.DB_rs.close();
        } catch (Exception e) {
            System.out.println("SQLException:"+e.getMessage());
        }
        
        ID = id;
        
        if(ID != null){
            lbl_Id.setText(ID);
        }
        try{
            DBM.dbOpen();
            DBM.dbClose();
        } catch (Exception e){
            System.out.println("SQLException : " + e.getMessage());
        }
        
    }

    TimeFrame() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    /*
    public final void getDBData(String strQuery){
        try {
            strQuery = "Select * From time where id = '" + ID + "'";
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strQuery);
            //String strId = DBM.DB_rs.getString("ID"); //id 가져오기
            //String strPrice = DBM.DB_rs.getString("cost"); //기본 0원에 시간 추가 이벤트 발생시 사용요금 변경
 //         String strUse = DBM.DB_rs.getString("u_time"); //사용시간 가져오기
            count = DBM.DB_rs.getInt("r_time"); //남은시간 가져오기
            
     //       lbl_Id.setText(strId);
     //       txt_Price.setText(strPrice);
     //       txt_Use.setText(strUse);
            
            java.util.Timer timer = new java.util.Timer();
            TimerTask task = new TimerTask() {
                @Override
                public void run() {
                    txt_Count.setText(Integer.toString(count)+"분");
                    txt_Use.setText(Integer.toString(countup)+"분");
                    countup++;
                    count--;
                    if(count==-1){
                        timer.cancel();
                    }
                }
            };
            timer.scheduleAtFixedRate(task, 0l, 1000); //0초 딜레이 1분마다 타이머 실행
            
            DBM.DB_rs.close();
        } catch (Exception e) {
            System.out.println("SQLException:"+e.getMessage());
        }
    }
*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        lbl_Id = new javax.swing.JLabel();
        btn_Add = new javax.swing.JButton();
        lbl_Title = new javax.swing.JTextField();
        lbl_Price = new javax.swing.JLabel();
        txt_Price = new javax.swing.JTextField();
        lbl_Use = new javax.swing.JLabel();
        lbl_Count = new javax.swing.JLabel();
        txt_Count = new javax.swing.JTextField();
        txt_Use = new javax.swing.JTextField();
        btn_Exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        lbl_Id.setFont(new java.awt.Font("한컴 고딕", 1, 18)); // NOI18N
        lbl_Id.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        btn_Add.setBackground(new java.awt.Color(153, 204, 255));
        btn_Add.setFont(new java.awt.Font("한컴 고딕", 1, 18)); // NOI18N
        btn_Add.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add.setText("시간추가");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        lbl_Title.setBackground(new java.awt.Color(102, 102, 102));
        lbl_Title.setFont(new java.awt.Font("한컴 고딕", 1, 18)); // NOI18N
        lbl_Title.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Title.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lbl_Title.setText("PC방 시간 관리 프로그램");
        lbl_Title.setPreferredSize(new java.awt.Dimension(140, 30));

        lbl_Price.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        lbl_Price.setText("사용요금");

        txt_Price.setBackground(new java.awt.Color(102, 102, 102));
        txt_Price.setFont(new java.awt.Font("한컴 고딕", 1, 18)); // NOI18N
        txt_Price.setForeground(new java.awt.Color(255, 255, 255));
        txt_Price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Price.setText("0");
        txt_Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_PriceActionPerformed(evt);
            }
        });

        lbl_Use.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        lbl_Use.setText("사용시간(분)");

        lbl_Count.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        lbl_Count.setText("남은시간(분)");

        txt_Count.setBackground(new java.awt.Color(102, 102, 102));
        txt_Count.setFont(new java.awt.Font("한컴 고딕", 1, 18)); // NOI18N
        txt_Count.setForeground(new java.awt.Color(255, 255, 255));
        txt_Count.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Count.setText("00:00");
        txt_Count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CountActionPerformed(evt);
            }
        });

        txt_Use.setBackground(new java.awt.Color(102, 102, 102));
        txt_Use.setFont(new java.awt.Font("한컴 고딕", 1, 18)); // NOI18N
        txt_Use.setForeground(new java.awt.Color(255, 255, 255));
        txt_Use.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Use.setText("00:00");

        btn_Exit.setBackground(new java.awt.Color(153, 204, 255));
        btn_Exit.setFont(new java.awt.Font("한컴 고딕", 1, 18)); // NOI18N
        btn_Exit.setForeground(new java.awt.Color(255, 255, 255));
        btn_Exit.setText("PC종료");
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("한컴 고딕", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_Title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_Add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(lbl_Price)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                                .addComponent(lbl_Use)
                                .addGap(43, 43, 43))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_Price)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_Use)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_Count, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lbl_Count)
                                    .addGap(20, 20, 20))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbl_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Price)
                    .addComponent(lbl_Use)
                    .addComponent(lbl_Count))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Use, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Count, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        // PC종료
        int time = Integer.parseInt(txt_Count.getText());
        String id1 = lbl_Id.getText();
        System.out.println(time);
        System.out.println(id1);
        String sql="select * from time";
         String strQuery = "update time set r_time = '"+time+"' where Id ='" + id1 +"'";
            try {
                    DBM.dbOpen();
                    DBM.DB_rs = DBM.DB_stmt.executeQuery(sql);
                    if(DBM.DB_rs.next()){
                        int result = DBM.DB_stmt.executeUpdate(strQuery);
                        if(result == 1){
                        
                        DBM.dbClose();
                        //this.dispose();
                    } 
                    }
                }catch (Exception e){
                    System.out.println("SQLException : " + e.getMessage());
                }
        System.exit(0);
    }//GEN-LAST:event_btn_ExitActionPerformed

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        // 시간 추가 버튼
        
        new AddTimeFrame(ID,null).setVisible(true);
    }//GEN-LAST:event_btn_AddActionPerformed

    private void txt_PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_PriceActionPerformed

    private void txt_CountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbl_Count;
    private javax.swing.JLabel lbl_Id;
    private javax.swing.JLabel lbl_Price;
    private javax.swing.JTextField lbl_Title;
    private javax.swing.JLabel lbl_Use;
    private javax.swing.JTextField txt_Count;
    private javax.swing.JTextField txt_Price;
    private javax.swing.JTextField txt_Use;
    // End of variables declaration//GEN-END:variables

    private int ParseInt(String text) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
